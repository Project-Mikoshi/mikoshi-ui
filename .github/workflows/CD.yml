#------------------------------------------------------------------------------------
# Workflow configuration
#------------------------------------------------------------------------------------
name: Deployments

on:
  push:
    branches:
      - master
      - 'releases/**'

#------------------------------------------------------------------------------------
# Define application permissions & version
#------------------------------------------------------------------------------------
permissions: write-all

#------------------------------------------------------------------------------------
# Workflow jobs (Linux only)
#------------------------------------------------------------------------------------
jobs:
  #----------------------------------------------------------------------------------
  # build packages and apps
  #----------------------------------------------------------------------------------
  build:
    name: Build packages and apps
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    env:
          NODE_OPTIONS: "--max_old_space_size=4096"
    steps:
      - uses: actions/checkout@v3

      #------------------------------------------------------------------------------
      # install
      #------------------------------------------------------------------------------
      - name: Install depdencies
        run: |
          npm install
          npx lerna bootstrap

      #------------------------------------------------------------------------------
      # build packges and apps
      #------------------------------------------------------------------------------
      - name: Build packages and apps
        env:
          NODE_OPTIONS: "--max_old_space_size=4096"
        run:  npm run build

      #------------------------------------------------------------------------------
      # cache build
      #------------------------------------------------------------------------------
      - name: Cache build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            **/node_modules
            packages/**/dist/
            !packages/**/node_modules/dist/
          key: ${{ runner.os }}-mikoshi

  #----------------------------------------------------------------------------------
  # Test and lint of the build
  #----------------------------------------------------------------------------------
  test:
    name: Test and lint of the build
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      #------------------------------------------------------------------------------
      # retrieve cache
      #------------------------------------------------------------------------------
      - name: Retrieve cached build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            **/node_modules
            packages/**/dist/
            !packages/**/node_modules/dist/
          key: ${{ runner.os }}-mikoshi

      #------------------------------------------------------------------------------
      # lint
      #------------------------------------------------------------------------------
      - name: Lint check
        run:  npm run lint

      #------------------------------------------------------------------------------
      # test
      #------------------------------------------------------------------------------
      - name: Intergation and unit tests
        run:  npm run test

  #----------------------------------------------------------------------------------
  # Bump version
  #----------------------------------------------------------------------------------
  version:
    name: Bump version
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          fetch-depth: 0

      #------------------------------------------------------------------------------
      # retrieve cache
      #------------------------------------------------------------------------------
      - name: Retrieve cached build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            **/node_modules
            packages/**/dist/
            !packages/**/node_modules/dist/
          key: ${{ runner.os }}-mikoshi

      #------------------------------------------------------------------------------
      # Bump package versions base on commit label 
      #------------------------------------------------------------------------------
      - name: Bump package versions base on commit label 
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          npx lerna version --ammend --conventional-commits --create-release github --yes
          git commit -am "[skip ci] automatic version bump"

      #------------------------------------------------------------------------------
      # Push changes 
      #------------------------------------------------------------------------------
      - name: Push changes
        run: git push

  #----------------------------------------------------------------------------------
  # Publish packages
  #----------------------------------------------------------------------------------
  publish:
    name: Publish packages
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #------------------------------------------------------------------------------
      # retrieve cache
      #------------------------------------------------------------------------------
      - name: Retrieve cached build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            **/node_modules
            packages/**/dist/
            !packages/**/node_modules/dist/
          key: ${{ runner.os }}-mikoshi

      #------------------------------------------------------------------------------
      # publish packages
      #------------------------------------------------------------------------------
      - name: Publish packages
        env:
          GH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          npm set @anthony-y-zhu14:registry=https://npm.pkg.github.com
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }}"
          npx lerna publish from-git --no-private --yes

  #----------------------------------------------------------------------------------
  # Deploy apps
  #----------------------------------------------------------------------------------
  deploy:
    name: Deploy apps
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      #------------------------------------------------------------------------------
      # retrieve cache
      #------------------------------------------------------------------------------
      - name: Retrieve cached build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            **/node_modules
            packages/**/dist/
            !packages/**/node_modules/dist/
          key: ${{ runner.os }}-mikoshi

      #------------------------------------------------------------------------------
      # deploy storybook
      #------------------------------------------------------------------------------
      - name: Deploy storybook
        run: npm run deploy:storybook -- --project-token=${{ secrets.CHROMATIC_PROJECT_TOKEN }} --exit-once-uploaded
